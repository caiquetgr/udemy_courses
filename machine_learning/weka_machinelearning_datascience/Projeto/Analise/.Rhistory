if (!require("devtools"))
install.packages("devtools")
devtools::install_github("trnnick/TStools")
if (!require("devtools")){install.packages("devtools")}
devtools::install_github("trnnick/TStools")
install.packages("forecast",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
devtools::install_github("trnnick/TStools")
install.packages("zoo",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
devtools::install_github("trnnick/TStools")
dados  <- read.csv('C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\dados.csv')
matriz <- as.matrix(dados)
TStools::nemenyi(matriz, conf.int=0.95, plottype="vline")
plot <- TStools::nemenyi(matriz, conf.int=0.95, plottype="vline")
png(filename="./")
png(filename=".")
png(filename="C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\NemenyiTestResult.png")
dev.off()
nemenyiTest <- TStools::nemenyi(matriz, conf.int=0.95, plottype="vline")
png(filename="C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\NemenyiTestResult.png")
plot(nemenyiTest)
rm()
rm("*")
View(dados)
?rm
rm(list = ls())
dados  <- read.csv('C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\dados.csv')
matriz <- as.matrix(dados)
nemenyiTest <- TStools::nemenyi(matriz, conf.int=0.95, plottype="vline")
png(filename="C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\NemenyiTestResult.png")
plot(nemenyiTest)
dev.print(nemenyiTest)
rm(list = ls())
dados  <- read.csv('C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\dados.csv')
matriz <- as.matrix(dados)
png(filename="C:\\Programacao\\Java\\MachineLearning_Udemy\\Projeto\\Analise\\NemenyiTestResult.png")
TStools::nemenyi(matriz, conf.int=0.95, plottype="vline")
dev.off()
